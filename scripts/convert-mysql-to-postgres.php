<?php

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç MySQL dump –≤ PostgreSQL —Ñ–æ—Ä–º–∞—Ç
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–∞–º–ø–æ–≤
 */

if ($argc < 3) {
    echo "Usage: php convert-mysql-to-postgres.php <input.sql> <output.sql>\n";
    exit(1);
}

$inputFile = $argv[1];
$outputFile = $argv[2];

if (!file_exists($inputFile)) {
    echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $inputFile\n";
    exit(1);
}

echo "üìñ –ß–∏—Ç–∞–µ–º MySQL dump –ø–æ—Å—Ç—Ä–æ—á–Ω–æ...\n";

$input = fopen($inputFile, 'r');
if (!$input) {
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è —á—Ç–µ–Ω–∏—è\n";
    exit(1);
}

$output = fopen($outputFile, 'w');
if (!$output) {
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª\n";
    fclose($input);
    exit(1);
}

echo "üîß –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º MySQL ‚Üí PostgreSQL...\n";

// –ü–∏—à–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–ë–ï–ó session_replication_role - Neon –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç)
fwrite($output, "-- Converted from MySQL to PostgreSQL\n");
fwrite($output, "-- Generated: " . date('Y-m-d H:i:s') . "\n\n");

$lineCount = 0;
$processedCount = 0;
$skippedCount = 0;

while (($line = fgets($input)) !== false) {
    $lineCount++;
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    if (preg_match('/^--/', $line)) {
        continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    if (trim($line) === '') {
        continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º MySQL-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (preg_match('/^\/\*!/', $line)) {
        $skippedCount++;
        continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º LOCK/UNLOCK TABLES
    if (preg_match('/^(LOCK|UNLOCK) TABLES/', $line)) {
        $skippedCount++;
        continue;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º SET –∫–æ–º–∞–Ω–¥—ã
    if (preg_match('/^SET /', $line)) {
        $skippedCount++;
        continue;
    }
    
    // 1. –£–±–∏—Ä–∞–µ–º MySQL-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ (backticks)
    $line = str_replace('`', '"', $line);
    
    // 2. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
    // –ü–∞—Ç—Ç–µ—Ä–Ω—ã: ,0, -> ,FALSE,  ,1, -> ,TRUE,
    $line = preg_replace('/,\s*0\s*,/', ',FALSE,', $line);
    $line = preg_replace('/,\s*1\s*,/', ',TRUE,', $line);
    $line = preg_replace('/,\s*0\s*\)/', ',FALSE)', $line);
    $line = preg_replace('/,\s*1\s*\)/', ',TRUE)', $line);
    
    // –í VALUES –≤ –Ω–∞—á–∞–ª–µ: (0, -> (FALSE,   (1, -> (TRUE,
    $line = preg_replace('/\(\s*0\s*,/', '(FALSE,', $line);
    $line = preg_replace('/\(\s*1\s*,/', '(TRUE,', $line);
    
    // 3. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–∞—Ç—ã
    $line = preg_replace("/'0000-00-00 00:00:00'/", 'NULL', $line);
    $line = preg_replace("/'0000-00-00'/", 'NULL', $line);
    
    // 4. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º 'NULL' —Å—Ç—Ä–æ–∫–∏ –≤ NULL
    $line = preg_replace("/,'NULL',/", ',NULL,', $line);
    $line = preg_replace("/,'NULL'\)/", ',NULL)', $line);
    
    fwrite($output, $line);
    $processedCount++;
    
    // –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10000 —Å—Ç—Ä–æ–∫
    if ($processedCount % 10000 === 0) {
        echo "  –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: " . number_format($processedCount) . "\r";
    }
}

fclose($input);
fclose($output);

$sizeKb = round(filesize($outputFile) / 1024, 2);
echo "\n‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n";
echo "   –ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: " . number_format($lineCount) . "\n";
echo "   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: " . number_format($processedCount) . "\n";
echo "   –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—Ç—Ä–æ–∫: " . number_format($skippedCount) . "\n";
echo "   –†–∞–∑–º–µ—Ä –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {$sizeKb} KB\n";
echo "üìÑ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $outputFile\n";

exit(0);
